{"version":3,"sources":["components/Button/Button.module.css","components/Fields/Field/Field.module.css","components/Fields/Fields.module.css","components/Result/Result.module.css","components/Button/Button.js","context/functionContext.js","components/Fields/Field/Field.js","components/Fields/Fields.js","components/Result/Result.js","container/App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","classButton","children","styles","Plus","Minus","Calculate","Reset","className","onClick","clicked","FunctionContext","React","createContext","totalHoursFunc","Field","inputPlusRef","useRef","inputMinusRef","hoursFunc","useContext","ref","Input","type","name","onChange","current","value","keyArray","Fields","fields","numberField","map","field","index","key","Result","Fragment","App","useState","totalMins","countField","currentMins","countArray","buttonClicked","totalMinArray","hour","hoursState","setHoursState","hoursToMath","hours","hoursArray","split","parseInt","appTitle","newCountField","newArray","push","newTimeArray","pop","console","log","Provider","startHourInput","endHourInput","startTotalMin","resultTotalMin","tempArray","resultArray","tempMin","forEach","number","Math","floor","min","finalHour","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,wB,kBCA1JD,EAAOC,QAAU,CAAC,MAAQ,uB,kBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,uMCgCZC,EA9BA,SAAAC,GACb,IAAIC,EAEJ,OAAQD,EAAME,UACZ,IAAK,IACHD,EAAcE,IAAOC,KACrB,MACF,IAAK,IACHH,EAAcE,IAAOE,MACrB,MACF,IAAK,WACHJ,EAAcE,IAAOG,UACrB,MACF,IAAK,QACHL,EAAcE,IAAOI,MACrB,MACF,QACEN,EAAcE,IAAOI,MAGzB,OACE,4BACEC,UAAS,UAAKP,EAAL,YAAoBE,IAAOJ,QACpCU,QAAST,EAAMU,SAEdV,EAAME,W,gCCtBES,EAJSC,IAAMC,cAAc,CAC1CC,eAAgB,eCwCHC,EAvCD,SAAAf,GACZ,IAAMgB,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAEvBE,EAAYC,qBAAWT,GAE7B,OACE,6BACE,2BACEU,IAAKL,EACLR,UAAWL,IAAOmB,MAClBC,KAAK,OACLC,KAAK,YACLC,SAAU,kBACRN,EAAUL,eACRE,EAAaU,QAAQC,MACrBT,EAAcQ,QAAQC,MACtB3B,EAAM4B,aAKZ,2BACEP,IAAKH,EACLV,UAAWL,IAAOmB,MAClBC,KAAK,OACLC,KAAK,UACLC,SAAU,kBACRN,EAAUL,eACRE,EAAaU,QAAQC,MACrBT,EAAcQ,QAAQC,MACtB3B,EAAM4B,eCvBHC,EARA,SAAA7B,GACb,IAAM8B,EAAS9B,EAAM+B,YAAYC,KAAI,SAACC,EAAOC,GAC3C,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAON,SAAUM,OAGtC,OAAO,yBAAK1B,UAAWL,IAAO0B,QAASC,I,gBCA1BM,EANA,SAAApC,GAAK,OAClB,kBAAC,IAAMqC,SAAP,KACE,uBAAG7B,UAAWL,IAAOiC,QAASpC,EAAME,YC4HzBoC,EA1HH,SAAAtC,GAAU,IAAD,EACiBuC,mBAAS,CAC3CC,UAAW,EACXC,WAAY,EACZC,YAAa,EACbC,WAAY,GACZC,eAAe,EACfC,cAAe,GACfC,KAAM,MARW,mBACZC,EADY,KACAC,EADA,KA8BbC,EAAc,SAAAC,GAClB,IAAMC,EAAaD,EAAME,MAAM,KAG/B,OAFmC,GAAhBD,EAAW,GACKE,SAASF,EAAW,KAwEzD,OACE,yBAAK3C,UAAU,OACb,4BAAKR,EAAMsD,UACX,kBAAC,EAAD,CAAQ5C,QAlDa,WACvB,IAAM6C,EAAgBR,EAAWN,WAAa,EACxCe,EAAQ,YAAOT,EAAWJ,YAChCa,EAASC,KAAKF,GAEdP,EAAc,eACTD,EADQ,CAEXN,WAAYc,EACZZ,WAAYa,OA0CZ,KACA,kBAAC,EAAD,CAAQ9C,QAlGc,WACxB,IAAM6C,EAAgBR,EAAWN,WAAa,EACxCe,EAAQ,YAAOT,EAAWJ,YAC1Be,EAAY,YAAOX,EAAWF,eACpCa,EAAaC,MACbH,EAASG,MAELJ,EAAgB,EAClBP,EAAc,eACTD,EADQ,CAEXN,WAAYc,EACZZ,WAAYa,EACZX,cAAea,KAGjBE,QAAQC,IAAI,qBAmFZ,KACA,kBAAC,EAAgBC,SAAjB,CAA0BnC,MAAO,CAAEb,eAzEb,SAACiD,EAAgBC,EAAcpC,GACvD,GAAImC,GAAkBC,EAAc,CAClC,IAAMC,EAAgBhB,EAAYc,GAG9BG,EAFgBjB,EAAYe,GAEGC,EAE/BC,EAAiB,IACnBA,EAAiB,KAAUA,GAG7B,IAAMC,EAAS,YAAOpB,EAAWF,eACjCsB,EAAUvC,GAAYsC,EAEtBlB,EAAc,eACTD,EADQ,CAEXF,cAAesB,SA0Df,kBAAC,EAAD,CAAQpC,YAAagB,EAAWJ,cAElC,kBAAC,EAAD,CAAQjC,QA3CkB,WAC5B,IAAM0D,EAAW,YAAOrB,EAAWF,eAE/BwB,EAAUtB,EAAWP,UAEzB4B,EAAYE,SAAQ,SAAAC,GACdA,IACFF,GAAWE,MAIf,IAAMrB,EAAQsB,KAAKC,MAAMJ,EAAU,IAC7BK,EAAMF,KAAKC,MAAMJ,EAAU,IAC3BM,EAAYD,EAAM,GAAN,UAAcxB,EAAd,aAAwBwB,GAAxB,UAAmCxB,EAAnC,YAA4CwB,GAE9D1B,EAAc,eACTD,EADQ,CAEXL,YAAa2B,EACb7B,UAAW,EACXM,KAAM6B,OAwBN,YACA,kBAAC,EAAD,CAAQjE,QArBc,SAAAkE,GACxB5B,EAAc,CACZR,UAAW,EACXC,WAAY,EACZC,YAAa,EACbC,WAAY,GACZC,eAAe,EACfC,cAAe,GACfC,KAAM,QAaN,SAEA,kBAAC,EAAD,mCAAgCC,EAAWL,cAC3C,kBAAC,EAAD,kCAA+BK,EAAWD,SChH5B+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,CAAK7B,SAAS,oBACd8B,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c9d1ad9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Plus\":\"Button_Plus__2lJWC\",\"Minus\":\"Button_Minus__3Dxza\",\"Calculate\":\"Button_Calculate__3TvTU\",\"Reset\":\"Button_Reset__2RiW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Field_Input__1V-lB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fields\":\"Fields_Fields__2Hi8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__kx_y2\"};","import React from \"react\";\nimport styles from \"./Button.module.css\";\n\nconst Button = props => {\n  let classButton;\n\n  switch (props.children) {\n    case \"+\":\n      classButton = styles.Plus;\n      break;\n    case \"-\":\n      classButton = styles.Minus;\n      break;\n    case \"Calculer\":\n      classButton = styles.Calculate;\n      break;\n    case \"Reset\":\n      classButton = styles.Reset;\n      break;\n    default:\n      classButton = styles.Reset;\n  }\n\n  return (\n    <button\n      className={`${classButton} ${styles.Button}`}\n      onClick={props.clicked}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst FunctionContext = React.createContext({\n  totalHoursFunc: () => {}\n});\n\nexport default FunctionContext;\n","import React, { useRef, useContext } from \"react\";\nimport styles from \"./Field.module.css\";\nimport FunctionContext from \"../../../context/functionContext\";\n\nconst Field = props => {\n  const inputPlusRef = useRef(null);\n  const inputMinusRef = useRef(null);\n\n  const hoursFunc = useContext(FunctionContext);\n\n  return (\n    <div>\n      <input\n        ref={inputPlusRef}\n        className={styles.Input}\n        type=\"time\"\n        name=\"StartTime\"\n        onChange={() =>\n          hoursFunc.totalHoursFunc(\n            inputPlusRef.current.value,\n            inputMinusRef.current.value,\n            props.keyArray\n          )\n        }\n      />\n\n      <input\n        ref={inputMinusRef}\n        className={styles.Input}\n        type=\"time\"\n        name=\"EndTime\"\n        onChange={() =>\n          hoursFunc.totalHoursFunc(\n            inputPlusRef.current.value,\n            inputMinusRef.current.value,\n            props.keyArray\n          )\n        }\n      />\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\nimport styles from \"./Fields.module.css\";\nimport Field from \"./Field/Field\";\n\nconst Fields = props => {\n  const fields = props.numberField.map((field, index) => {\n    return <Field key={index} keyArray={index} />;\n  });\n\n  return <div className={styles.Fields}>{fields}</div>;\n};\n\nexport default Fields;\n","import React from \"react\";\nimport styles from \"./Result.module.css\";\n\nconst Result = props => (\n  <React.Fragment>\n    <p className={styles.Result}>{props.children}</p>\n  </React.Fragment>\n);\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"../components/Button/Button\";\nimport Fields from \"../components/Fields/Fields\";\nimport Result from \"../components/Result/Result\";\nimport FunctionContext from \"../context/functionContext\";\n\nconst App = props => {\n  const [hoursState, setHoursState] = useState({\n    totalMins: 0,\n    countField: 1,\n    currentMins: 0,\n    countArray: [],\n    buttonClicked: false,\n    totalMinArray: [],\n    hour: \"0\"\n  });\n\n  const clickMinusHandler = () => {\n    const newCountField = hoursState.countField - 1;\n    const newArray = [...hoursState.countArray];\n    const newTimeArray = [...hoursState.totalMinArray];\n    newTimeArray.pop();\n    newArray.pop();\n\n    if (newCountField > 0) {\n      setHoursState({\n        ...hoursState,\n        countField: newCountField,\n        countArray: newArray,\n        totalMinArray: newTimeArray\n      });\n    } else {\n      console.log(\"non nononononon\");\n    }\n  };\n\n  const hoursToMath = hours => {\n    const hoursArray = hours.split(\":\");\n    const hoursToMin = hoursArray[0] * 60;\n    const hoursTotalMin = hoursToMin + parseInt(hoursArray[1]);\n    return hoursTotalMin;\n  };\n\n  const totalHoursHandler = (startHourInput, endHourInput, keyArray) => {\n    if (startHourInput && endHourInput) {\n      const startTotalMin = hoursToMath(startHourInput);\n      const endTotalMin = hoursToMath(endHourInput);\n\n      let resultTotalMin = endTotalMin - startTotalMin;\n\n      if (resultTotalMin < 0) {\n        resultTotalMin = 24 * 60 + resultTotalMin;\n      }\n\n      const tempArray = [...hoursState.totalMinArray];\n      tempArray[keyArray] = resultTotalMin;\n\n      setHoursState({\n        ...hoursState,\n        totalMinArray: tempArray\n      });\n    }\n  };\n\n  const clickPlusHandler = () => {\n    const newCountField = hoursState.countField + 1;\n    const newArray = [...hoursState.countArray];\n    newArray.push(newCountField);\n\n    setHoursState({\n      ...hoursState,\n      countField: newCountField,\n      countArray: newArray\n    });\n  };\n\n  const clickCalculateHandler = () => {\n    const resultArray = [...hoursState.totalMinArray];\n\n    let tempMin = hoursState.totalMins;\n\n    resultArray.forEach(number => {\n      if (number) {\n        tempMin += number;\n      }\n    });\n\n    const hours = Math.floor(tempMin / 60);\n    const min = Math.floor(tempMin % 60);\n    const finalHour = min < 10 ? `${hours}:0${min}` : `${hours}:${min}`;\n\n    setHoursState({\n      ...hoursState,\n      currentMins: tempMin,\n      totalMins: 0,\n      hour: finalHour\n    });\n  };\n\n  const clickResetHandler = e => {\n    setHoursState({\n      totalMins: 0,\n      countField: 1,\n      currentMins: 0,\n      countArray: [],\n      buttonClicked: false,\n      totalMinArray: [],\n      hour: \"0\"\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>{props.appTitle}</h1>\n      <Button clicked={clickPlusHandler}>+</Button>\n      <Button clicked={clickMinusHandler}>-</Button>\n      <FunctionContext.Provider value={{ totalHoursFunc: totalHoursHandler }}>\n        <Fields numberField={hoursState.countArray} />\n      </FunctionContext.Provider>\n      <Button clicked={clickCalculateHandler}>Calculer</Button>\n      <Button clicked={clickResetHandler}>Reset</Button>\n\n      <Result>{`Total des minutes : ${hoursState.currentMins}`}</Result>\n      <Result>{`Total des heures : ${hoursState.hour}`}</Result>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App appTitle=\"Calculer heures\" />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}